name: CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup environment
      run: |
        rustup component add rust-src llvm-tools-preview
        rustup target add riscv32imac-unknown-none-elf
        rustup target add riscv64imac-unknown-none-elf
        rustup target add aarch64-unknown-linux-gnu
        rustup target add mipsel-unknown-linux-gnu
        cargo install cargo-binutils
    - name: Check code format
      run: cargo fmt -- --check
    - name: Build
      run: |
        cargo build --verbose
        cargo clippy --verbose
        cargo build --verbose --target x86_64-unknown-uefi -Z build-std=core,alloc
        cargo build --verbose --target riscv32imac-unknown-none-elf
        cargo build --verbose --target riscv64imac-unknown-none-elf
        cargo build --verbose --target aarch64-unknown-linux-gnu
        cargo build --verbose --target mipsel-unknown-linux-gnu
        cd examples
        cd uefi && make build && cd ..
        cd user && cargo build && cd ..
        cd riscv && make build && cd ..
    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features --no-fail-fast  # Customize args for your own needs
      env:
        CARGO_INCREMENTAL: '0'
        RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads'
    - name: Install grcov
      id: coverage
      uses: actions-rs/grcov@v0.1
    - name: Coveralls upload
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ${{ steps.coverage.outputs.report }}
    - name: Run benchmarks
      run: cargo bench --verbose
    - name: Build docs
      run: cargo doc --verbose
